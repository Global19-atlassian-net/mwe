
/*
 * generated by Xtext
 */
lexer grammar MweHighlighting;


@header {
package org.eclipse.emf.mwe2.language.ui.highlighting;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

KEYWORD_IMPORT : 'import';

KEYWORD_PROPERTY : 'property';

KEYWORD_FILE : 'file';

KEYWORD_FALSE : 'false';

KEYWORD_TRUE : 'true';

KEYWORD_AS : 'as';

KEYWORD_DOT : '.';

KEYWORD_COLON : ':';

KEYWORD_ASSIGN : '=';

KEYWORD_COMMA : ',';

KEYWORD_SEMICOLON : ';';

KEYWORD_OPENBRACE : '{';

KEYWORD_CLOSINGBRACE : '}';


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
