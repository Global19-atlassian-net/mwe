/*
* generated by Xtext
*/
package org.eclipse.emf.mwe2.language.ui.outline;

import org.eclipse.emf.mwe2.language.mwe2.Assignment;
import org.eclipse.emf.mwe2.language.mwe2.BooleanLiteral;
import org.eclipse.emf.mwe2.language.mwe2.DeclaredProperty;
import org.eclipse.emf.mwe2.language.mwe2.Module;
import org.eclipse.emf.mwe2.language.mwe2.Mwe2Package;
import org.eclipse.emf.mwe2.language.mwe2.Reference;
import org.eclipse.emf.mwe2.language.mwe2.StringLiteral;
import org.eclipse.swt.graphics.Image;
import org.eclipse.xtext.ui.IImageHelper;
import org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider;
import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode;

import com.google.inject.Inject;

/**
 * customization of the default outline structure
 * @author koehnlein
 */
public class Mwe2OutlineTreeProvider extends DefaultOutlineTreeProvider {

	@Inject
	private IImageHelper imageHelper;

	protected void doCreateChildren(DocumentRootNode parentNode, Module module) {
		createEStructuralFeatureNode(parentNode, module, Mwe2Package.Literals.MODULE__IMPORTS,
				imageHelper.getImage("impc_obj.gif"), "import declarations");
		createEStructuralFeatureNode(parentNode, module, Mwe2Package.Literals.MODULE__DECLARED_PROPERTIES,
				imageHelper.getImage("settings_obj.gif"), "declared properties");
		if (module.getRoot() != null)
			createNode(parentNode, module.getRoot());
	}

	protected boolean isLeaf(Reference reference) {
		return true;
	}

	protected boolean isLeaf(BooleanLiteral literal) {
		return true;
	}

	protected boolean isLeaf(StringLiteral literal) {
		return true;
	}

	protected Image image(Assignment ass) {
		return labelProvider.getImage(ass.getValue());
	}

	public Image image(DeclaredProperty prop) {
		return labelProvider.getImage(prop.getDefault());
	}
}
