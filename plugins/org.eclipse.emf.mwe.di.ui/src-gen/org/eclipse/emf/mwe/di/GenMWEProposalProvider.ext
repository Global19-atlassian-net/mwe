/*
Generated with Xtext
*/

import xtext;

import org::eclipse::emf::ecore;
import org::eclipse::jface::text::contentassist;
import org::eclipse::xtext::crossref;
import org::eclipse::xtext::ui::common::editor::contentassist;
import org::eclipse::xtext::ui::common::xtend::contentassist;

import mwe;

extension org::eclipse::xtext::ui::common::xtend::contentassist::ContentAssist reexport;
extension org::eclipse::xtend::util::stdlib::io;

/**
 * Represents a generated, default implementation of interface {@link IProposalProvider}.
 * 
 * @see org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider
 */

	 
List[ICompletionProposal] completeFileImports(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFileImports feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeFileProperties(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFileProperties feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeFileValue(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeFileValue feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeJavaImportJavaImport(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeJavaImportJavaImport feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeJavaImportWildcard(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeJavaImportWildcard feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeGenericImportValue(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeGenericImportValue feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"GenericImportValue\"", contentAssistContext) };
	 
List[ICompletionProposal] completeLocalVariableName(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeLocalVariableName feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "LocalVariableName", contentAssistContext) };
	 
List[ICompletionProposal] completeLocalVariableValue(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeLocalVariableValue feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completePropertiesFileImportFile(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completePropertiesFileImportFile feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"PropertiesFileImportFile\"", contentAssistContext) };
	 
List[ICompletionProposal] completeSimpleValueValue(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeSimpleValueValue feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"SimpleValueValue\"", contentAssistContext) };
	 
List[ICompletionProposal] completeComplexValueClassName(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeComplexValueClassName feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeComplexValueId(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeComplexValueId feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "ComplexValueId", contentAssistContext) };
	 
List[ICompletionProposal] completeComplexValueFooBar(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeComplexValueFooBar feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeComplexValueAssignments(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeComplexValueAssignments feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeWorkflowRefUri(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeWorkflowRefUri feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{ newProposal(assignment, "\"WorkflowRefUri\"", contentAssistContext) };
	 
List[ICompletionProposal] completeWorkflowRefAssignments(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeWorkflowRefAssignments feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeIdRefId(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeIdRefId feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "IdRefId", contentAssistContext) };
	 
List[ICompletionProposal] completeAssignmentFeature(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeAssignmentFeature feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "AssignmentFeature", contentAssistContext) };
	 
List[ICompletionProposal] completeAssignmentOperator(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeAssignmentOperator feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeAssignmentValue(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeAssignmentValue feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
	{};
	 
List[ICompletionProposal] completeQualifiedNameParts(Assignment assignment, IContentAssistContext contentAssistContext) :
	debug("completeQualifiedNameParts feature '" + assignment.feature + "' terminal '"
					+ assignment.terminal + "' cardinality '" + assignment.cardinality + "' and prefix '"
					+ contentAssistContext.matchString.trim() + "'") ->
    { newProposal(assignment, "QualifiedNameParts", contentAssistContext) };


	 	  
List[ICompletionProposal] complete(RuleCall ruleCall, IContentAssistContext contentAssistContext) :
	{};

/*
	// TODO 
    @Override
	protected String getDefaultImageFilePath() {
		return "icons/editor.gif";
	}

	@Override
	protected String getPluginId() {
		return UI_PLUGIN_ID;
	}
*/
