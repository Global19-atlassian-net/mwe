/*
* generated by Xtext
*/
grammar InternalMWEConcept;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipse.emf.mwe.concept.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.emf.mwe.concept.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.emf.mwe.concept.services.MWEConceptGrammarAccess;

}

@parser::members {
 
 	private MWEConceptGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MWEConceptGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMWEFile
entryRuleMWEFile 
:
{ before(grammarAccess.getMWEFileRule()); }
	 ruleMWEFile
{ after(grammarAccess.getMWEFileRule()); } 
	 EOF 
;

// Rule MWEFile
ruleMWEFile 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMWEFileAccess().getGroup()); }
(rule__MWEFile__Group__0)
{ after(grammarAccess.getMWEFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportedFQN
entryRuleImportedFQN 
:
{ before(grammarAccess.getImportedFQNRule()); }
	 ruleImportedFQN
{ after(grammarAccess.getImportedFQNRule()); } 
	 EOF 
;

// Rule ImportedFQN
ruleImportedFQN 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportedFQNAccess().getGroup()); }
(rule__ImportedFQN__Group__0)
{ after(grammarAccess.getImportedFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSetting
entryRuleSetting 
:
{ before(grammarAccess.getSettingRule()); }
	 ruleSetting
{ after(grammarAccess.getSettingRule()); } 
	 EOF 
;

// Rule Setting
ruleSetting 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSettingAccess().getGroup()); }
(rule__Setting__Group__0)
{ after(grammarAccess.getSettingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponent
entryRuleComponent 
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentAccess().getGroup()); }
(rule__Component__Group__0)
{ after(grammarAccess.getComponentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComponentWithType
entryRuleComponentWithType 
:
{ before(grammarAccess.getComponentWithTypeRule()); }
	 ruleComponentWithType
{ after(grammarAccess.getComponentWithTypeRule()); } 
	 EOF 
;

// Rule ComponentWithType
ruleComponentWithType 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComponentWithTypeAccess().getGroup()); }
(rule__ComponentWithType__Group__0)
{ after(grammarAccess.getComponentWithTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConfigurationElement
entryRuleConfigurationElement 
:
{ before(grammarAccess.getConfigurationElementRule()); }
	 ruleConfigurationElement
{ after(grammarAccess.getConfigurationElementRule()); } 
	 EOF 
;

// Rule ConfigurationElement
ruleConfigurationElement 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConfigurationElementAccess().getAlternatives()); }
(rule__ConfigurationElement__Alternatives)
{ after(grammarAccess.getConfigurationElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleAttributeList
entryRuleAttributeList 
:
{ before(grammarAccess.getAttributeListRule()); }
	 ruleAttributeList
{ after(grammarAccess.getAttributeListRule()); } 
	 EOF 
;

// Rule AttributeList
ruleAttributeList 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeListAccess().getAlternatives()); }
(rule__AttributeList__Alternatives)
{ after(grammarAccess.getAttributeListAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSimpleProperty
entryRuleSimpleProperty 
:
{ before(grammarAccess.getSimplePropertyRule()); }
	 ruleSimpleProperty
{ after(grammarAccess.getSimplePropertyRule()); } 
	 EOF 
;

// Rule SimpleProperty
ruleSimpleProperty 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimplePropertyAccess().getGroup()); }
(rule__SimpleProperty__Group__0)
{ after(grammarAccess.getSimplePropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyFile
entryRulePropertyFile 
:
{ before(grammarAccess.getPropertyFileRule()); }
	 rulePropertyFile
{ after(grammarAccess.getPropertyFileRule()); } 
	 EOF 
;

// Rule PropertyFile
rulePropertyFile 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyFileAccess().getGroup()); }
(rule__PropertyFile__Group__0)
{ after(grammarAccess.getPropertyFileAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getAlternatives()); }
(rule__Attribute__Alternatives)
{ after(grammarAccess.getAttributeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleAttribute
entryRuleSimpleAttribute 
:
{ before(grammarAccess.getSimpleAttributeRule()); }
	 ruleSimpleAttribute
{ after(grammarAccess.getSimpleAttributeRule()); } 
	 EOF 
;

// Rule SimpleAttribute
ruleSimpleAttribute 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleAttributeAccess().getValueAssignment()); }
(rule__SimpleAttribute__ValueAssignment)
{ after(grammarAccess.getSimpleAttributeAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getComponentAssignment()); }
(rule__Reference__ComponentAssignment)
{ after(grammarAccess.getReferenceAccess().getComponentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidID
entryRuleValidID 
:
{ before(grammarAccess.getValidIDRule()); }
	 ruleValidID
{ after(grammarAccess.getValidIDRule()); } 
	 EOF 
;

// Rule ValidID
ruleValidID 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidIDAccess().getAlternatives()); }
(rule__ValidID__Alternatives)
{ after(grammarAccess.getValidIDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleMWEString
entryRuleMWEString 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getMWEStringRule()); }
	 ruleMWEString
{ after(grammarAccess.getMWEStringRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule MWEString
ruleMWEString 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMWEStringAccess().getAlternatives()); }
(rule__MWEString__Alternatives)
{ after(grammarAccess.getMWEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMWEStringPart
entryRuleMWEStringPart 
:
{ before(grammarAccess.getMWEStringPartRule()); }
	 ruleMWEStringPart
{ after(grammarAccess.getMWEStringPartRule()); } 
	 EOF 
;

// Rule MWEStringPart
ruleMWEStringPart 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMWEStringPartAccess().getAlternatives()); }
(rule__MWEStringPart__Alternatives)
{ after(grammarAccess.getMWEStringPartAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoolean
entryRuleBoolean 
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanAccess().getGroup()); }
(rule__Boolean__Group__0)
{ after(grammarAccess.getBooleanAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReplaceableString
entryRuleReplaceableString 
:
{ before(grammarAccess.getReplaceableStringRule()); }
	 ruleReplaceableString
{ after(grammarAccess.getReplaceableStringRule()); } 
	 EOF 
;

// Rule ReplaceableString
ruleReplaceableString 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReplaceableStringAccess().getGroup()); }
(rule__ReplaceableString__Group__0)
{ after(grammarAccess.getReplaceableStringAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyReference
entryRulePropertyReference 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getPropertyReferenceRule()); }
	 rulePropertyReference
{ after(grammarAccess.getPropertyReferenceRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule PropertyReference
rulePropertyReference 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyReferenceAccess().getPropertyAssignment()); }
(rule__PropertyReference__PropertyAssignment)
{ after(grammarAccess.getPropertyReferenceAccess().getPropertyAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulePlainString
entryRulePlainString 
:
{ before(grammarAccess.getPlainStringRule()); }
	 rulePlainString
{ after(grammarAccess.getPlainStringRule()); } 
	 EOF 
;

// Rule PlainString
rulePlainString 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlainStringAccess().getValueAssignment()); }
(rule__PlainString__ValueAssignment)
{ after(grammarAccess.getPlainStringAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFileRef
entryRuleFileRef 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getFileRefRule()); }
	 ruleFileRef
{ after(grammarAccess.getFileRefRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule FileRef
ruleFileRef 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFileRefAccess().getGroup()); }
(rule__FileRef__Group__0)
{ after(grammarAccess.getFileRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue 
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
(rule__ConstantValue__Alternatives)
{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColon
entryRuleColon 
:
{ before(grammarAccess.getColonRule()); }
	 ruleColon
{ after(grammarAccess.getColonRule()); } 
	 EOF 
;

// Rule Colon
ruleColon 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColonAccess().getColonKeyword()); }

	':' 

{ after(grammarAccess.getColonAccess().getColonKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDot
entryRuleDot 
:
{ before(grammarAccess.getDotRule()); }
	 ruleDot
{ after(grammarAccess.getDotRule()); } 
	 EOF 
;

// Rule Dot
ruleDot 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDotAccess().getFullStopKeyword()); }

	'.' 

{ after(grammarAccess.getDotAccess().getFullStopKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleQuote
entryRuleSingleQuote 
:
{ before(grammarAccess.getSingleQuoteRule()); }
	 ruleSingleQuote
{ after(grammarAccess.getSingleQuoteRule()); } 
	 EOF 
;

// Rule SingleQuote
ruleSingleQuote 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleQuoteAccess().getApostropheKeyword()); }

	'\'' 

{ after(grammarAccess.getSingleQuoteAccess().getApostropheKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapedSingleQuote
entryRuleEscapedSingleQuote 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getEscapedSingleQuoteRule()); }
	 ruleEscapedSingleQuote
{ after(grammarAccess.getEscapedSingleQuoteRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EscapedSingleQuote
ruleEscapedSingleQuote 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapedSingleQuoteAccess().getGroup()); }
(rule__EscapedSingleQuote__Group__0)
{ after(grammarAccess.getEscapedSingleQuoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleDoubleQuote
entryRuleDoubleQuote 
:
{ before(grammarAccess.getDoubleQuoteRule()); }
	 ruleDoubleQuote
{ after(grammarAccess.getDoubleQuoteRule()); } 
	 EOF 
;

// Rule DoubleQuote
ruleDoubleQuote 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleQuoteAccess().getQuotationMarkKeyword()); }

	'"' 

{ after(grammarAccess.getDoubleQuoteAccess().getQuotationMarkKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapedDoubleQuote
entryRuleEscapedDoubleQuote 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getEscapedDoubleQuoteRule()); }
	 ruleEscapedDoubleQuote
{ after(grammarAccess.getEscapedDoubleQuoteRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EscapedDoubleQuote
ruleEscapedDoubleQuote 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapedDoubleQuoteAccess().getGroup()); }
(rule__EscapedDoubleQuote__Group__0)
{ after(grammarAccess.getEscapedDoubleQuoteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleBackslash
entryRuleBackslash 
:
{ before(grammarAccess.getBackslashRule()); }
	 ruleBackslash
{ after(grammarAccess.getBackslashRule()); } 
	 EOF 
;

// Rule Backslash
ruleBackslash 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBackslashAccess().getReverseSolidusKeyword()); }

	'\\' 

{ after(grammarAccess.getBackslashAccess().getReverseSolidusKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEscapedBackslash
entryRuleEscapedBackslash 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getEscapedBackslashRule()); }
	 ruleEscapedBackslash
{ after(grammarAccess.getEscapedBackslashRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule EscapedBackslash
ruleEscapedBackslash 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEscapedBackslashAccess().getGroup()); }
(rule__EscapedBackslash__Group__0)
{ after(grammarAccess.getEscapedBackslashAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleOpeningBrace
entryRuleOpeningBrace 
:
{ before(grammarAccess.getOpeningBraceRule()); }
	 ruleOpeningBrace
{ after(grammarAccess.getOpeningBraceRule()); } 
	 EOF 
;

// Rule OpeningBrace
ruleOpeningBrace 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOpeningBraceAccess().getLeftCurlyBracketKeyword()); }

	'{' 

{ after(grammarAccess.getOpeningBraceAccess().getLeftCurlyBracketKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClosingBrace
entryRuleClosingBrace 
:
{ before(grammarAccess.getClosingBraceRule()); }
	 ruleClosingBrace
{ after(grammarAccess.getClosingBraceRule()); } 
	 EOF 
;

// Rule ClosingBrace
ruleClosingBrace 
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClosingBraceAccess().getRightCurlyBracketKeyword()); }

	'}' 

{ after(grammarAccess.getClosingBraceAccess().getRightCurlyBracketKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Setting__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getGroup_1_0()); }
(rule__Setting__Group_1_0__0)
{ after(grammarAccess.getSettingAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSettingAccess().getValueAssignment_1_1()); }
(rule__Setting__ValueAssignment_1_1)
{ after(grammarAccess.getSettingAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getTypeAssignment_1_0()); }
(rule__Component__TypeAssignment_1_0)
{ after(grammarAccess.getComponentAccess().getTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getComponentAccess().getFileRefAssignment_1_1()); }
(rule__Component__FileRefAssignment_1_1)
{ after(grammarAccess.getComponentAccess().getFileRefAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getComponentAccess().getSemicolonKeyword_3_0()); }
)

    |(
{ before(grammarAccess.getComponentAccess().getGroup_3_1()); }
(rule__Component__Group_3_1__0)
{ after(grammarAccess.getComponentAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentWithType__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getSemicolonKeyword_2_0()); }

	';' 

{ after(grammarAccess.getComponentWithTypeAccess().getSemicolonKeyword_2_0()); }
)

    |(
{ before(grammarAccess.getComponentWithTypeAccess().getGroup_2_1()); }
(rule__ComponentWithType__Group_2_1__0)
{ after(grammarAccess.getComponentWithTypeAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConfigurationElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConfigurationElementAccess().getSettingParserRuleCall_0()); }
	ruleSetting
{ after(grammarAccess.getConfigurationElementAccess().getSettingParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConfigurationElementAccess().getPropertyParserRuleCall_1()); }
	ruleProperty
{ after(grammarAccess.getConfigurationElementAccess().getPropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getGroup_0()); }
(rule__AttributeList__Group_0__0)
{ after(grammarAccess.getAttributeListAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAttributeListAccess().getGroup_1()); }
(rule__AttributeList__Group_1__0)
{ after(grammarAccess.getAttributeListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getSimplePropertyParserRuleCall_0()); }
	ruleSimpleProperty
{ after(grammarAccess.getPropertyAccess().getSimplePropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getPropertyFileParserRuleCall_1()); }
	rulePropertyFile
{ after(grammarAccess.getPropertyAccess().getPropertyFileParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getSimpleAttributeParserRuleCall_0()); }
	ruleSimpleAttribute
{ after(grammarAccess.getAttributeAccess().getSimpleAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAttributeAccess().getReferenceParserRuleCall_1()); }
	ruleReference
{ after(grammarAccess.getAttributeAccess().getReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidID__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getValidIDAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getPropertyKeyword_1()); }

	'property' 

{ after(grammarAccess.getValidIDAccess().getPropertyKeyword_1()); }
)

    |(
{ before(grammarAccess.getValidIDAccess().getFileKeyword_2()); }

	'file' 

{ after(grammarAccess.getValidIDAccess().getFileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsAssignment_0()); }
(rule__MWEString__PartsAssignment_0)
{ after(grammarAccess.getMWEStringAccess().getPartsAssignment_0()); }
)

    |(
{ before(grammarAccess.getMWEStringAccess().getGroup_1()); }
(rule__MWEString__Group_1__0)
{ after(grammarAccess.getMWEStringAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMWEStringAccess().getGroup_2()); }
(rule__MWEString__Group_2__0)
{ after(grammarAccess.getMWEStringAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEStringPart__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringPartAccess().getReplaceableStringParserRuleCall_0()); }
	ruleReplaceableString
{ after(grammarAccess.getMWEStringPartAccess().getReplaceableStringParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMWEStringPartAccess().getPlainStringParserRuleCall_1()); }
	rulePlainString
{ after(grammarAccess.getMWEStringPartAccess().getPlainStringParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getValueTrueKeyword_1_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanAccess().getValueTrueKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0_1()); }

	'false' 

{ after(grammarAccess.getBooleanAccess().getValueFalseKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getWSTerminalRuleCall_0()); }
	RULE_WS
{ after(grammarAccess.getConstantValueAccess().getWSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getColonParserRuleCall_1()); }
	ruleColon
{ after(grammarAccess.getConstantValueAccess().getColonParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getOpeningBraceParserRuleCall_2()); }
	ruleOpeningBrace
{ after(grammarAccess.getConstantValueAccess().getOpeningBraceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getClosingBraceParserRuleCall_3()); }
	ruleClosingBrace
{ after(grammarAccess.getConstantValueAccess().getClosingBraceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getEscapedDoubleQuoteParserRuleCall_4()); }
	ruleEscapedDoubleQuote
{ after(grammarAccess.getConstantValueAccess().getEscapedDoubleQuoteParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getEscapedSingleQuoteParserRuleCall_5()); }
	ruleEscapedSingleQuote
{ after(grammarAccess.getConstantValueAccess().getEscapedSingleQuoteParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getANY_OTHERTerminalRuleCall_6()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getConstantValueAccess().getANY_OTHERTerminalRuleCall_6()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getEscapedBackslashParserRuleCall_7()); }
	ruleEscapedBackslash
{ after(grammarAccess.getConstantValueAccess().getEscapedBackslashParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getValidIDParserRuleCall_8()); }
	ruleValidID
{ after(grammarAccess.getConstantValueAccess().getValidIDParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getTrueKeyword_9()); }

	'true' 

{ after(grammarAccess.getConstantValueAccess().getTrueKeyword_9()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getFalseKeyword_10()); }

	'false' 

{ after(grammarAccess.getConstantValueAccess().getFalseKeyword_10()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getEqualsSignKeyword_11()); }

	'=' 

{ after(grammarAccess.getConstantValueAccess().getEqualsSignKeyword_11()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getImportKeyword_12()); }

	'import' 

{ after(grammarAccess.getConstantValueAccess().getImportKeyword_12()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getDotParserRuleCall_13()); }
	ruleDot
{ after(grammarAccess.getConstantValueAccess().getDotParserRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MWEFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEFileAccess().getMWEFileAction_0()); }
(

)
{ after(grammarAccess.getMWEFileAccess().getMWEFileAction_0()); }
)

	rule__MWEFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEFileAccess().getImportsAssignment_1()); }
(rule__MWEFile__ImportsAssignment_1)*
{ after(grammarAccess.getMWEFileAccess().getImportsAssignment_1()); }
)

	rule__MWEFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEFile__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEFileAccess().getRootAssignment_2()); }
(rule__MWEFile__RootAssignment_2)
{ after(grammarAccess.getMWEFileAccess().getRootAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportedFQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); }
	ruleFQN
{ after(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); }
)

	rule__ImportedFQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedFQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportedFQNAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getImportedFQNAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Setting__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getFeatureAssignment_0()); }
(rule__Setting__FeatureAssignment_0)
{ after(grammarAccess.getSettingAccess().getFeatureAssignment_0()); }
)

	rule__Setting__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Setting__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getAlternatives_1()); }
(rule__Setting__Alternatives_1)
{ after(grammarAccess.getSettingAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Setting__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getEqualsSignKeyword_1_0_0()); }

	'=' 

{ after(grammarAccess.getSettingAccess().getEqualsSignKeyword_1_0_0()); }
)

	rule__Setting__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Setting__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getValueAssignment_1_0_1()); }
(rule__Setting__ValueAssignment_1_0_1)
{ after(grammarAccess.getSettingAccess().getValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getComponentAction_0()); }
(

)
{ after(grammarAccess.getComponentAccess().getComponentAction_0()); }
)

	rule__Component__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAlternatives_1()); }
(rule__Component__Alternatives_1)?
{ after(grammarAccess.getComponentAccess().getAlternatives_1()); }
)

	rule__Component__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getGroup_2()); }
(rule__Component__Group_2__0)?
{ after(grammarAccess.getComponentAccess().getGroup_2()); }
)

	rule__Component__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAlternatives_3()); }
(rule__Component__Alternatives_3)
{ after(grammarAccess.getComponentAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Component__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getAsKeyword_2_0()); }

	'as' 

{ after(grammarAccess.getComponentAccess().getAsKeyword_2_0()); }
)

	rule__Component__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameAssignment_2_1()); }
(rule__Component__NameAssignment_2_1)
{ after(grammarAccess.getComponentAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Component__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3_1_0()); }

	'{' 

{ after(grammarAccess.getComponentAccess().getLeftCurlyBracketKeyword_3_1_0()); }
)

	rule__Component__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getElementsAssignment_3_1_1()); }
(rule__Component__ElementsAssignment_3_1_1)*
{ after(grammarAccess.getComponentAccess().getElementsAssignment_3_1_1()); }
)

	rule__Component__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Component__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_3_1_2()); }

	'}' 

{ after(grammarAccess.getComponentAccess().getRightCurlyBracketKeyword_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComponentWithType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getTypeAssignment_0()); }
(rule__ComponentWithType__TypeAssignment_0)
{ after(grammarAccess.getComponentWithTypeAccess().getTypeAssignment_0()); }
)

	rule__ComponentWithType__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentWithType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getGroup_1()); }
(rule__ComponentWithType__Group_1__0)?
{ after(grammarAccess.getComponentWithTypeAccess().getGroup_1()); }
)

	rule__ComponentWithType__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentWithType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getAlternatives_2()); }
(rule__ComponentWithType__Alternatives_2)
{ after(grammarAccess.getComponentWithTypeAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ComponentWithType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getAsKeyword_1_0()); }

	'as' 

{ after(grammarAccess.getComponentWithTypeAccess().getAsKeyword_1_0()); }
)

	rule__ComponentWithType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentWithType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getNameAssignment_1_1()); }
(rule__ComponentWithType__NameAssignment_1_1)
{ after(grammarAccess.getComponentWithTypeAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ComponentWithType__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getComponentWithTypeAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

	rule__ComponentWithType__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentWithType__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getElementsAssignment_2_1_1()); }
(rule__ComponentWithType__ElementsAssignment_2_1_1)*
{ after(grammarAccess.getComponentWithTypeAccess().getElementsAssignment_2_1_1()); }
)

	rule__ComponentWithType__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ComponentWithType__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getComponentWithTypeAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeList__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getSimpleAttributeParserRuleCall_0_0()); }
	ruleSimpleAttribute
{ after(grammarAccess.getAttributeListAccess().getSimpleAttributeParserRuleCall_0_0()); }
)

	rule__AttributeList__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getGroup_0_1()); }
(rule__AttributeList__Group_0_1__0)?
{ after(grammarAccess.getAttributeListAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getAttributeListContentAction_0_1_0()); }
(

)
{ after(grammarAccess.getAttributeListAccess().getAttributeListContentAction_0_1_0()); }
)

	rule__AttributeList__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
(rule__AttributeList__Group_0_1_1__0)
{ after(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
)
(
{ before(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
(rule__AttributeList__Group_0_1_1__0)*
{ after(grammarAccess.getAttributeListAccess().getGroup_0_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0()); }

	',' 

{ after(grammarAccess.getAttributeListAccess().getCommaKeyword_0_1_1_0()); }
)

	rule__AttributeList__Group_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getContentAssignment_0_1_1_1()); }
(rule__AttributeList__ContentAssignment_0_1_1_1)
{ after(grammarAccess.getAttributeListAccess().getContentAssignment_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getReferenceParserRuleCall_1_0()); }
	ruleReference
{ after(grammarAccess.getAttributeListAccess().getReferenceParserRuleCall_1_0()); }
)

	rule__AttributeList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getGroup_1_1()); }
(rule__AttributeList__Group_1_1__0)?
{ after(grammarAccess.getAttributeListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getAttributeListContentAction_1_1_0()); }
(

)
{ after(grammarAccess.getAttributeListAccess().getAttributeListContentAction_1_1_0()); }
)

	rule__AttributeList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAttributeListAccess().getGroup_1_1_1()); }
(rule__AttributeList__Group_1_1_1__0)
{ after(grammarAccess.getAttributeListAccess().getGroup_1_1_1()); }
)
(
{ before(grammarAccess.getAttributeListAccess().getGroup_1_1_1()); }
(rule__AttributeList__Group_1_1_1__0)*
{ after(grammarAccess.getAttributeListAccess().getGroup_1_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeList__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getCommaKeyword_1_1_1_0()); }

	',' 

{ after(grammarAccess.getAttributeListAccess().getCommaKeyword_1_1_1_0()); }
)

	rule__AttributeList__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeList__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getContentAssignment_1_1_1_1()); }
(rule__AttributeList__ContentAssignment_1_1_1_1)
{ after(grammarAccess.getAttributeListAccess().getContentAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getPropertyKeyword_0()); }

	'property' 

{ after(grammarAccess.getSimplePropertyAccess().getPropertyKeyword_0()); }
)

	rule__SimpleProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
(rule__SimpleProperty__NameAssignment_1)
{ after(grammarAccess.getSimplePropertyAccess().getNameAssignment_1()); }
)

	rule__SimpleProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getDelimiterAssignment_2()); }
(rule__SimpleProperty__DelimiterAssignment_2)
{ after(grammarAccess.getSimplePropertyAccess().getDelimiterAssignment_2()); }
)

	rule__SimpleProperty__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleProperty__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getValueAssignment_3()); }
(rule__SimpleProperty__ValueAssignment_3)
{ after(grammarAccess.getSimplePropertyAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PropertyFile__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFileAccess().getPropertyKeyword_0()); }

	'property' 

{ after(grammarAccess.getPropertyFileAccess().getPropertyKeyword_0()); }
)

	rule__PropertyFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyFile__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFileAccess().getFileRefAssignment_1()); }
(rule__PropertyFile__FileRefAssignment_1)
{ after(grammarAccess.getPropertyFileAccess().getFileRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getValidIDParserRuleCall_0()); }
	ruleValidID
{ after(grammarAccess.getFQNAccess().getValidIDParserRuleCall_0()); }
)

	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getValidIDParserRuleCall_1_1()); }
	ruleValidID
{ after(grammarAccess.getFQNAccess().getValidIDParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MWEString__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getBeginAssignment_1_0()); }
(rule__MWEString__BeginAssignment_1_0)
{ after(grammarAccess.getMWEStringAccess().getBeginAssignment_1_0()); }
)

	rule__MWEString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEString__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsAssignment_1_1()); }
(rule__MWEString__PartsAssignment_1_1)*
{ after(grammarAccess.getMWEStringAccess().getPartsAssignment_1_1()); }
)

	rule__MWEString__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEString__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getEndAssignment_1_2()); }
(rule__MWEString__EndAssignment_1_2)
{ after(grammarAccess.getMWEStringAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MWEString__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getBeginAssignment_2_0()); }
(rule__MWEString__BeginAssignment_2_0)
{ after(grammarAccess.getMWEStringAccess().getBeginAssignment_2_0()); }
)

	rule__MWEString__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEString__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsAssignment_2_1()); }
(rule__MWEString__PartsAssignment_2_1)*
{ after(grammarAccess.getMWEStringAccess().getPartsAssignment_2_1()); }
)

	rule__MWEString__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__MWEString__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getEndAssignment_2_2()); }
(rule__MWEString__EndAssignment_2_2)
{ after(grammarAccess.getMWEStringAccess().getEndAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Boolean__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getBooleanStringPartAction_0()); }
(

)
{ after(grammarAccess.getBooleanAccess().getBooleanStringPartAction_0()); }
)

	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getValueAssignment_1()); }
(rule__Boolean__ValueAssignment_1)
{ after(grammarAccess.getBooleanAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReplaceableString__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceableStringAccess().getDollarSignLeftCurlyBracketKeyword_0()); }

	'${' 

{ after(grammarAccess.getReplaceableStringAccess().getDollarSignLeftCurlyBracketKeyword_0()); }
)

	rule__ReplaceableString__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceableString__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceableStringAccess().getPropertyAssignment_1()); }
(rule__ReplaceableString__PropertyAssignment_1)
{ after(grammarAccess.getReplaceableStringAccess().getPropertyAssignment_1()); }
)

	rule__ReplaceableString__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ReplaceableString__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceableStringAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getReplaceableStringAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FileRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileRefAccess().getFileKeyword_0()); }

	'file' 

{ after(grammarAccess.getFileRefAccess().getFileKeyword_0()); }
)

	rule__FileRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FileRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileRefAccess().getFilePathAssignment_1()); }
(rule__FileRef__FilePathAssignment_1)
{ after(grammarAccess.getFileRefAccess().getFilePathAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EscapedSingleQuote__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedSingleQuoteAccess().getBackslashParserRuleCall_0()); }
	ruleBackslash
{ after(grammarAccess.getEscapedSingleQuoteAccess().getBackslashParserRuleCall_0()); }
)

	rule__EscapedSingleQuote__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EscapedSingleQuote__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedSingleQuoteAccess().getSingleQuoteParserRuleCall_1()); }
	ruleSingleQuote
{ after(grammarAccess.getEscapedSingleQuoteAccess().getSingleQuoteParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EscapedDoubleQuote__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedDoubleQuoteAccess().getBackslashParserRuleCall_0()); }
	ruleBackslash
{ after(grammarAccess.getEscapedDoubleQuoteAccess().getBackslashParserRuleCall_0()); }
)

	rule__EscapedDoubleQuote__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EscapedDoubleQuote__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedDoubleQuoteAccess().getDoubleQuoteParserRuleCall_1()); }
	ruleDoubleQuote
{ after(grammarAccess.getEscapedDoubleQuoteAccess().getDoubleQuoteParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EscapedBackslash__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedBackslashAccess().getBackslashParserRuleCall_0()); }
	ruleBackslash
{ after(grammarAccess.getEscapedBackslashAccess().getBackslashParserRuleCall_0()); }
)

	rule__EscapedBackslash__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EscapedBackslash__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEscapedBackslashAccess().getBackslashParserRuleCall_1()); }
	ruleBackslash
{ after(grammarAccess.getEscapedBackslashAccess().getBackslashParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MWEFile__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEFileAccess().getImportsImportParserRuleCall_1_0()); }
	ruleImport{ after(grammarAccess.getMWEFileAccess().getImportsImportParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEFile__RootAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEFileAccess().getRootComponentWithTypeParserRuleCall_2_0()); }
	ruleComponentWithType{ after(grammarAccess.getMWEFileAccess().getRootComponentWithTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0()); }
	ruleImportedFQN{ after(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__FeatureAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getFeatureOperationCrossReference_0_0()); }
(
{ before(grammarAccess.getSettingAccess().getFeatureOperationValidIDParserRuleCall_0_0_1()); }
	ruleValidID{ after(grammarAccess.getSettingAccess().getFeatureOperationValidIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSettingAccess().getFeatureOperationCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__ValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getValueAttributeListParserRuleCall_1_0_1_0()); }
	ruleAttributeList{ after(grammarAccess.getSettingAccess().getValueAttributeListParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Setting__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSettingAccess().getValueComponentParserRuleCall_1_1_0()); }
	ruleComponent{ after(grammarAccess.getSettingAccess().getValueComponentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getTypeTypeCrossReference_1_0_0()); }
(
{ before(grammarAccess.getComponentAccess().getTypeTypeFQNParserRuleCall_1_0_0_1()); }
	ruleFQN{ after(grammarAccess.getComponentAccess().getTypeTypeFQNParserRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getComponentAccess().getTypeTypeCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__FileRefAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getFileRefFileRefParserRuleCall_1_1_0()); }
	ruleFileRef{ after(grammarAccess.getComponentAccess().getFileRefFileRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getNameValidIDParserRuleCall_2_1_0()); }
	ruleValidID{ after(grammarAccess.getComponentAccess().getNameValidIDParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Component__ElementsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentAccess().getElementsConfigurationElementParserRuleCall_3_1_1_0()); }
	ruleConfigurationElement{ after(grammarAccess.getComponentAccess().getElementsConfigurationElementParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentWithType__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getTypeTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getComponentWithTypeAccess().getTypeTypeFQNParserRuleCall_0_0_1()); }
	ruleFQN{ after(grammarAccess.getComponentWithTypeAccess().getTypeTypeFQNParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getComponentWithTypeAccess().getTypeTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentWithType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getNameValidIDParserRuleCall_1_1_0()); }
	ruleValidID{ after(grammarAccess.getComponentWithTypeAccess().getNameValidIDParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComponentWithType__ElementsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComponentWithTypeAccess().getElementsConfigurationElementParserRuleCall_2_1_1_0()); }
	ruleConfigurationElement{ after(grammarAccess.getComponentWithTypeAccess().getElementsConfigurationElementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__ContentAssignment_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getContentSimpleAttributeParserRuleCall_0_1_1_1_0()); }
	ruleSimpleAttribute{ after(grammarAccess.getAttributeListAccess().getContentSimpleAttributeParserRuleCall_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeList__ContentAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeListAccess().getContentReferenceParserRuleCall_1_1_1_1_0()); }
	ruleReference{ after(grammarAccess.getAttributeListAccess().getContentReferenceParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getSimplePropertyAccess().getNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__DelimiterAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getDelimiterEqualsSignKeyword_2_0()); }
(
{ before(grammarAccess.getSimplePropertyAccess().getDelimiterEqualsSignKeyword_2_0()); }

	'=' 

{ after(grammarAccess.getSimplePropertyAccess().getDelimiterEqualsSignKeyword_2_0()); }
)

{ after(grammarAccess.getSimplePropertyAccess().getDelimiterEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleProperty__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimplePropertyAccess().getValueMWEStringParserRuleCall_3_0()); }
	ruleMWEString{ after(grammarAccess.getSimplePropertyAccess().getValueMWEStringParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyFile__FileRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyFileAccess().getFileRefFileRefParserRuleCall_1_0()); }
	ruleFileRef{ after(grammarAccess.getPropertyFileAccess().getFileRefFileRefParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleAttribute__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleAttributeAccess().getValueMWEStringParserRuleCall_0()); }
	ruleMWEString{ after(grammarAccess.getSimpleAttributeAccess().getValueMWEStringParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__ComponentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getComponentComponentCrossReference_0()); }
(
{ before(grammarAccess.getReferenceAccess().getComponentComponentIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getReferenceAccess().getComponentComponentIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getComponentComponentCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__PartsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsBooleanParserRuleCall_0_0()); }
	ruleBoolean{ after(grammarAccess.getMWEStringAccess().getPartsBooleanParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__BeginAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getBeginSingleQuoteParserRuleCall_1_0_0()); }
	ruleSingleQuote{ after(grammarAccess.getMWEStringAccess().getBeginSingleQuoteParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__PartsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsMWEStringPartParserRuleCall_1_1_0()); }
	ruleMWEStringPart{ after(grammarAccess.getMWEStringAccess().getPartsMWEStringPartParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getEndSingleQuoteParserRuleCall_1_2_0()); }
	ruleSingleQuote{ after(grammarAccess.getMWEStringAccess().getEndSingleQuoteParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__BeginAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getBeginDoubleQuoteParserRuleCall_2_0_0()); }
	ruleDoubleQuote{ after(grammarAccess.getMWEStringAccess().getBeginDoubleQuoteParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__PartsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getPartsMWEStringPartParserRuleCall_2_1_0()); }
	ruleMWEStringPart{ after(grammarAccess.getMWEStringAccess().getPartsMWEStringPartParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MWEString__EndAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMWEStringAccess().getEndDoubleQuoteParserRuleCall_2_2_0()); }
	ruleDoubleQuote{ after(grammarAccess.getMWEStringAccess().getEndDoubleQuoteParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanAccess().getValueAlternatives_1_0()); }
(rule__Boolean__ValueAlternatives_1_0)
{ after(grammarAccess.getBooleanAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReplaceableString__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReplaceableStringAccess().getPropertyPropertyReferenceParserRuleCall_1_0()); }
	rulePropertyReference{ after(grammarAccess.getReplaceableStringAccess().getPropertyPropertyReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyReference__PropertyAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyEntryCrossReference_0()); }
(
{ before(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyEntryFQNParserRuleCall_0_1()); }
	ruleFQN{ after(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyEntryFQNParserRuleCall_0_1()); }
)
{ after(grammarAccess.getPropertyReferenceAccess().getPropertyPropertyEntryCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlainString__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlainStringAccess().getValueConstantValueParserRuleCall_0()); }
	ruleConstantValue{ after(grammarAccess.getPlainStringAccess().getValueConstantValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FileRef__FilePathAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFileRefAccess().getFilePathMWEStringParserRuleCall_1_0()); }
	ruleMWEString{ after(grammarAccess.getFileRefAccess().getFilePathMWEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


