grammar org.eclipse.emf.mwe.concept.MWEConcept hidden(WS, ML_COMMENT, SL_COMMENT)

generate mweConcept "http://www.eclipse.org/xtext/common/mwe/MWEConcept"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.eclipse.org/xtext/common/JavaVMTypes" as types
import "platform:/resource/org.eclipse.emf.mwe.properties/src-gen/org/eclipse/emf/mwe/properties/MWEProperties.ecore" as properties

MWEFile:
  {MWEFile}
  imports+=Import*
  root=ComponentWithType
;

Import:
  'import' importedNamespace=ImportedFQN ';'
;

ImportedFQN:
  FQN ('.*')?
;

Setting:
  feature=[types::Operation|ValidID] 
  (
  	  '=' value=AttributeList 
  	| value=Component
  ) 
;
  
Component:
  {Component} 
  (type=[types::Type|FQN] | fileRef=FileRef)? ('as' name=ValidID)? 
  (
      ';'
    | '{' elements+=ConfigurationElement* '}'
  )   
;

ComponentWithType returns Component:
  type=[types::Type|FQN] ('as' name=ValidID)? 
  (
      ';'
    | '{' elements+=ConfigurationElement* '}'
  )   
;

ConfigurationElement:
  Setting | Property;

Literal:
  Component | AttributeList | Attribute
;

AttributeList returns Literal:
    SimpleAttribute ({AttributeList.content+=current} (',' content+=SimpleAttribute)+)? 
  | Reference ({AttributeList.content+=current} (',' content+=Reference)+)?
;

Property:
  SimpleProperty | PropertyFile
;

PropertyEntry returns properties::PropertyEntry:
  SimpleProperty;

SimpleProperty returns Property:
  'property' name=FQN delimiter='=' value=MWEString;
  
PropertyFile:
  'property' fileRef=FileRef
;

Attribute:
  SimpleAttribute | Reference
;

SimpleAttribute:
  value=MWEString
;

Reference:
  component=[Component]
;

ValidID:
    ID
  | 'property'
  | 'file';

FQN:
  ValidID ('.' ValidID)*;
  
CompoundString returns properties::CompoundString:
  MWEString;
  
MWEString hidden():
    parts+=Boolean
  | begin=SingleQuote parts+=MWEStringPart* end=SingleQuote
  | begin=DoubleQuote parts+=MWEStringPart* end=DoubleQuote
;

CompoundStringPart returns properties::CompoundStringPart:
  MWEStringPart;

MWEStringPart:
  ReplaceableString | PlainString; 

Boolean returns MWEStringPart:
  {BooleanStringPart} value=('true'|'false')
;

ReplaceableString:
  '${' property=PropertyReference '}';

PropertyReference hidden(WS):
  property=[properties::PropertyEntry|FQN]
;

PlainString:
  value=ConstantValue;
  
FileRef hidden(WS):
  'file' filePath=MWEString;
  
ConstantValue:  
    WS
  | Colon
  | OpeningBrace
  | ClosingBrace
  | EscapedDoubleQuote
  | EscapedSingleQuote
  | ANY_OTHER
  | EscapedBackslash
  | ValidID
  | 'true'
  | 'false'
  | '='
  | 'import'
  | Dot;

Colon: ':';
Dot: '.';
SingleQuote: "\'";
EscapedSingleQuote hidden():
	Backslash SingleQuote;
DoubleQuote: "\"";
EscapedDoubleQuote hidden():
	Backslash DoubleQuote;
Backslash: "\\";
EscapedBackslash hidden():
	Backslash Backslash;
OpeningBrace: "{";
ClosingBrace: "}";

terminal ID  : '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
terminal ML_COMMENT	: '/*' -> '*/';
terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
terminal WS			: (' '|'\t'|'\r'|'\n')+;
terminal ANY_OTHER: .;
