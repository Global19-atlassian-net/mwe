From 10663660586ca9b8269860e42c589d5ab5c4c72d Mon Sep 17 00:00:00 2001
From: Christoph Kulla <christophkulla@googlemail.com>
Date: Sun, 29 Aug 2010 20:23:41 +0200
Subject: [PATCH] Give access to the workflow context.

---
 .../emf/mwe2/launch/runtime/Mwe2Runner.java        |   14 +++++++++++++-
 1 files changed, 13 insertions(+), 1 deletions(-)

diff --git a/plugins/org.eclipse.emf.mwe2.launch/src/org/eclipse/emf/mwe2/launch/runtime/Mwe2Runner.java b/plugins/org.eclipse.emf.mwe2.launch/src/org/eclipse/emf/mwe2/launch/runtime/Mwe2Runner.java
index 062fafa..332bdf1 100644
--- a/plugins/org.eclipse.emf.mwe2.launch/src/org/eclipse/emf/mwe2/launch/runtime/Mwe2Runner.java
+++ b/plugins/org.eclipse.emf.mwe2.launch/src/org/eclipse/emf/mwe2/launch/runtime/Mwe2Runner.java
@@ -21,6 +21,7 @@ import org.eclipse.emf.mwe2.language.factory.Mwe2ExecutionEngine;
 import org.eclipse.emf.mwe2.language.mwe2.Module;
 import org.eclipse.emf.mwe2.language.mwe2.Mwe2Package;
 import org.eclipse.emf.mwe2.runtime.workflow.IWorkflow;
+import org.eclipse.emf.mwe2.runtime.workflow.IWorkflowContext;
 import org.eclipse.emf.mwe2.runtime.workflow.WorkflowContextImpl;
 import org.eclipse.xtext.mwe.RuntimeResourceSetInitializer;
 import org.eclipse.xtext.mwe.UriFilter;
@@ -43,6 +44,9 @@ public class Mwe2Runner {
 	@Inject
 	private Provider<ResourceSet> resourceSetProvider;
 
+	@Inject(optional=true)
+	private IWorkflowContext context = new WorkflowContextImpl();
+	
 	public void run(URI createURI, Map<String, String> params) {
 		Resource resource = resourceSetProvider.get().getResource(createURI, true);
 		if (resource != null) {
@@ -77,7 +81,7 @@ public class Mwe2Runner {
 					+ object.getClass() + "'.");
 		}
 		try {
-			((IWorkflow) object).run(new WorkflowContextImpl());
+			((IWorkflow) object).run(context);
 		} catch (RuntimeException e) {
 			throw new RuntimeException("Problems running workflow " + moduleName + ": " + e.getMessage(), e);
 		}
@@ -116,5 +120,13 @@ public class Mwe2Runner {
 	public void setInitializer(RuntimeResourceSetInitializer initializer) {
 		this.initializer = initializer;
 	}
+	
+	public void setWorkflowContext (IWorkflowContext context) {
+		this.context = context;
+	}
+	
+	public IWorkflowContext getWorkflowContext () {
+		return context;
+	}
 
 }
-- 
1.6.6

